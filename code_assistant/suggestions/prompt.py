CodeCommentSuggestion = """
### 任务指令
请作为资深代码审查专家，帮我分析以下代码中的注释质量。请结合注释内容及相邻代码逻辑，判断是否存在无意义或低质量的注释，并给出专业评估和改进建议。

### 输入格式
我将提供：

<comment>
需要分析的注释代内容
</comment>

<code>
需要分析的代码段
</code>

### 评估标准
请重点检查：
 - 注释是否提供代码未直接体现的附加信息
 - 注释说明的抽象层级是否恰当（不应简单重复代码字面意思）
 - 注释与当前代码逻辑是否完全一致
 - 注释是否有助于理解复杂业务逻辑或特殊处理场景
 - 注释格式是否符合通用规范（如参数/返回值说明等）

### 输出要求
请按以下结构分析并输出结果：
<anaysis>
结合代码逻辑说明为何属于该问题类型
</anaysis>
<type>
对问题进行分类，输出归类结果，可选可行包括：冗余重复/过时失效/表述模糊/无信息量/逻辑矛盾
</type>
<suggestion>
给出注释的改进建议，包括修改方向或优化方案
</suggestion>
<proposal>
修改后注释，只写注释内容，不包含代码和其他任何内容
</proposal>

"""

RelevanceDetectionPrompt = """
### 任务指令
请作为资深代码审查专家，帮我分析以下代码中的注释质量。请结合注释内容及相邻代码逻辑，判断是否存在无意义或低质量的注释，并给出专业评估和改进建议。

### 低质量注释的类别
1. 冗余重复
这类注释仅仅是把代码已经明确表达的内容再用文字重复一遍，没有任何额外的解释或价值。例如 `x = x + 1; // 将 x 加 1`，这里代码本身逻辑很清楚，这样的注释应该建议用户删除。

2. 表述过于简略或模糊
注释只是使用了一些非常笼统、模糊的词汇，没有具体说明代码的功能、目的或逻辑，比如只写 “处理数据”“进行计算” 之类的注释，但没有详细说明是如何处理数据、进行什么样的计算，对代码理解没有任何帮助。
例如
```
void processData() { // 处理数据
    // 一些复杂的代码逻辑
}
```
3. 过时失效
代码已经修改和更新，但注释没有及时同步更新，导致注释内容与实际代码功能或逻辑不一致。
例如
```
int calculateSum(int a, int b) { // 使用旧的加法算法计算 a 和 b 的和
    return a * b; // 代码实际已经修改为乘法操作
}
```
4.与代码无关
这类注释内容和代码完全没有关系，可能是开发者在编写代码过程中随手写下的与个人想法、无关紧要的事件等有关的内容，对代码的理解和维护没有任何意义。
例如
```
int main() { // 今天天气不错
    // 程序的主要逻辑
}
```

### 输入格式
我将提供：

<comment>
需要分析的注释代内容
</comment>

<code>
需要分析的代码段
</code>

### 输出要求
请按以下结构分析并输出结果：
<analysis>
分析代码逻辑，判断comment中的注释否存在与代码无关、表述模糊、低质量等问题，给出你的分析过程。
如果注释上整体良好，略有小瑕疵，注释也不需要修改。
</analysis>
</type>
<result>
判断是否无意义或或低质量注释，写Yes或No
</result>
<type>
对问题进行分类，输出归类结果，可选可行包括：冗余重复/表述过于简略或模糊/过时失效/与代码无关
如果result为No，即代码注释质量较好，此处应该写NULL.
</type>
<suggestion>
给出注释的改进建议，包括修改方向或优化方案。如果注释良好，则写NULL.
</suggestion>
<proposal>
如果result为No，就不需要做任何修改，此处写NULL.
如果result为Yes，请针对<comment>原注释</comment>部分修改，不要包含其他内容。如果代码注释合理，则不需要做修改。
如果 suggestion 中建议删除改成注释，则此处写"删除"。
注意你应该使用与原注释相同的语言进行修改。
</proposal>
"""